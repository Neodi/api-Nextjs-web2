### //              Variables              // ###
@tokenAdmin = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJiNzQxMDVlNGQ3NzNjZTU4ZDJlNmMiLCJyb2xlIjpbImFkbWluIl0sImlhdCI6MTcxNDQ4MzMzNCwiZXhwIjoxNzE0NTEyMTM0fQ.Q37JbO5ciL6o1qpPZ6r_XsWcF0-Iq0NC-Zwy9nrPb_Y
@tokenUser = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjM5ZjY1MTU5ZTYwYThmMGU2YWY3MjUiLCJyb2xlIjpbInVzZXIiXSwiaWF0IjoxNzE1MDc0NjQxLCJleHAiOjE3MTUxMDM0NDF9.j_0qxmW39_TQf409Ro8Ue-438t3SgJWWEubYBGbs7cU

@tokenComercio = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjMwZjMyZmRkMDEyM2Y5OWIxNDU5NjYiLCJpYXQiOjE3MTUwNzMxNzQsImV4cCI6MTcxNTEwMTk3NH0.XVwYrrwS_eC3J9z5mdDU71Pr36mkXS4m1MDAK9RvTHE

@idUSerTest = 662a3615d18c99eb99d91950
@idAdmin = 662b74105e4d773ce58d2e6c
### ---------------- CRUD Strorage ----------------

### ------POST------
### 
POST http://localhost:3000/api/storage/postImg HTTP/1.1
Content-Type: multipart/form-data; boundary=Boundry

--Boundry
Content-Disposition: form-data; name="image"; filename="we_are_so_back.jpeg"
Content-Type: image/jpeg

< ./we_are_so_back.jpeg
--Boundry--
###
POST http://localhost:3000/api/storage/postVideo HTTP/1.1
Content-Type: multipart/form-data; boundary=Boundry

--Boundry
Content-Disposition: form-data; name="video"; filename="gatinho.mp4"
Content-Type: video/mp4

< ./gatinho.mp4
--Boundry--
###
POST http://localhost:3000/api/storage/postFile HTTP/1.1
Content-Type: multipart/form-data; boundary=Boundry

--Boundry
Content-Disposition: form-data; name="file"; filename="ejercicios_tema_2.pdf"
Content-Type: application/pdf

< ./path_to_your_file/ejercicios_tema_2.pdf
--Boundry--

### ------GET------
###
GET http://localhost:3000/api/storage/ HTTP/1.1
###
GET http://localhost:3000/api/storage/66283b3d4adf9c130ef8d4e5 HTTP/1.1

### ------DELETE------
###
DELETE http://localhost:3000/api/storage/softDelete/66284229d01227f22d8b1543 HTTP/1.1
###
DELETE http://localhost:3000/api/storage/totalDelete/66284226d01227f22d8b1541 HTTP/1.1



### ---------------- CRUD User ----------------

### ------POST------
###
POST http://localhost:3000/api/auth/register HTTP/1.1
Content-Type: application/json

{
    "nombre": "davidAdmin",
    "email": "david@mail.com",
    "password": "admin",
    "edad": 25,
    "ciudad": "Madrid",
    "roles": ["user"],
    "recibirOfertas" : true
}
###
POST http://localhost:3000/api/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "david@mail.com",
    "password": "admin"
}

### ------GET------
###
GET http://localhost:3000/api/auth/ HTTP/1.1
Authorization: Bearer {{tokenUser}}

### ------PATCH------
###
PATCH http://localhost:3000/api/auth/{{idAdmin}} HTTP/1.1
Content-Type: application/json

{
    "nombre": "David Admin",
    "role": ["admin"]
}

### ------DELETE------
###
DELETE http://localhost:3000/api/auth/softDelete/662a34ff620dd9802e817117 HTTP/1.1
###
DELETE http://localhost:3000/api/auth/totalDelete/662a2e522a21b07407db70ec HTTP/1.1


### ---------------- CRUD Comercios  ----------------

### ------POST------
###
POST http://localhost:3000/api/comercios/ HTTP/1.1
Authorization: Bearer {{tokenAdmin}}
Content-Type: application/json

{
    "nombreComercio": "Ejemplo buenillo",
    "cif": "LALALALA",
    "direccion": "En tus paredes",
    "email": "emoticon@mail.com",
    "telefono": 111222333
}

### ------GET------
###
GET http://localhost:3000/api/comercios/ HTTP/1.1
###
GET http://localhost:3000/api/comercios/662aa777ed2527c0d755f2b1 HTTP/1.1

### ------PATCH------
###
PATCH http://localhost:3000/api/comercios/662aa777ed2527c0d755f2b1 HTTP/1.1
Content-Type: application/json

{
    "telefono": 111111111
}

### ------DELETE------
###
DELETE http://localhost:3000/api/comercios/softDelete/662aa777ed2527c0d755f2b1 HTTP/1.1
###
DELETE http://localhost:3000/api/comercios/totalDelete/662aa777ed2527c0d755f2b1 HTTP/1.1


### ---------------- CRUD Webs  ----------------

### ------POST------
###
POST http://localhost:3000/api/webs/ HTTP/1.1
Authorization: Bearer {{tokenComercio}}
Content-Type: application/json

{
    "ciudad": "Valencia",
    "actividad": "Restaurante",
    "titulo": "Restaurante El Prado",
    "resumen": "Un restaurante con la mejor comida tradicional",
    "textos": [
      "Comida casera",
      "Ambiente acogedor",
      "Restaurante para todos"
    ],
    "fotos": [
      "66284224d01227f22d8b153f"
    ]
}

### ------GET------
###
GET http://localhost:3000/api/webs/ HTTP/1.1
###
GET http://localhost:3000/api/webs/662ac86381da418c0773b6e0 HTTP/1.1

### ------PATCH------
###
PATCH http://localhost:3000/api/webs/ HTTP/1.1
Authorization: Bearer {{tokenComercio}}
Content-Type: application/json

{
    "titulo": "PAELLAS GOD"
}

### ------DELETE------
###
DELETE http://localhost:3000/api/webs/totalDelete/662ac84b81da418c0773b6dd HTTP/1.1
###
DELETE http://localhost:3000/api/webs/softDelete/662ac84b81da418c0773b6dd HTTP/1.1


###  ---------------- Requisitos funcionales  ----------------
  
# 1.- Solo un admin puede registrar un comercio, después facilitará el token JWT a este.

# router.post("/", authMiddleware, checkRol(['admin']), validatorCreateItem, createItem)

### Login como admin
POST http://localhost:3000/api/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "david@mail.com",
    "password": "admin"
}
### Login como user
POST http://localhost:3000/api/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "manolin@mail.com",
    "password": "123456"
}
###
POST http://localhost:3000/api/comercios/ HTTP/1.1
Authorization: Bearer {{tokenAdmin}}
Content-Type: application/json

{
    "nombreComercio": "El Corte CR8",
    "cif": "CR8",
    "direccion": "Calle CR8 1",
    "email": "CR8@mail.com",
    "telefono": 888
}

###
# 2.- El comercio solo podrá subir/actualizar contenido en su propia página y requiere de un
# token JWT para hacerlo. Pero no puede modificar el Scoring, la cantidad de votaciones ni
# las reseñas. El comercio puede darse de baja y borrar su página

# router.patch("/:id", authMiddleware, checkRol(['comercio']), validatorUpdateItem, updateItem)
# router.delete("/softDelete/:id", authMiddleware, checkRol(['comercio']), softDeleteItem)
GET http://localhost:3000/api/comercios/ HTTP/1.1
###
GET http://localhost:3000/api/comercios/getToken/6630f32fdd0123f99b145966 HTTP/1.1
###
PATCH http://localhost:3000/api/comercios/ HTTP/1.1
Authorization: Bearer {{tokenComercio}}
Content-Type: application/json

{
    "scoring": 123
}
###
DELETE http://localhost:3000/api/comercios/true HTTP/1.1
Authorization: Bearer {{tokenComercio}}

###
# 3.- Un usuario anónimo puede consultar los comercios de una ciudad, los comercios de una
# ciudad y de una actividad, (todo ello ordenado, o no, por el scoring de la página). Así como
# también, de un comercio concreto por su identificador
GET http://localhost:3000/api/webs/ HTTP/1.1
###
GET http://localhost:3000/api/webs/buscar/Valencia HTTP/1.1
###
GET http://localhost:3000/api/webs/buscar/Valencia?scoring=desc&actividad=museo HTTP/1.1
###
GET http://localhost:3000/api/webs/id/66301cb0b44fadc342356c77 HTTP/1.1


###
# 4.- Cualquier usuario puede registrarse para recibir ofertas de los comercios de su ciudad
# en función de sus intereses si activa el flag permitirRecibirOfertas
###
POST http://localhost:3000/api/auth/register HTTP/1.1
Content-Type: application/json

{
    "nombre": "frejo",
    "email": "frejo@mail.com",
    "password": "frejo",
    "edad": 25,
    "ciudad": "Benavente",
    "roles": ["user"],
    "recibirOfertas" : false
}
###
GET http://localhost:3000/api/webs/ofertas/ HTTP/1.1
Authorization: Bearer {{tokenUser}}


###
# 5.- El usuario puede actualizar sus datos (ciudad, intereses y recibirOfertas) si está logado y
# tiene un JWT válido. Puede escribir reseñas en un comercio y también puede darse de baja
# cuando lo desee.

PATCH http://localhost:3000/api/auth/
Authorization: Bearer {{tokenAdmin}}
Content-Type: application/json

{
    "intereses": ["museo", "restaurante"]
}
###
POST http://localhost:3000/api/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "frejo@mail.com",
    "password": "frejo"
}  
###
DELETE http://localhost:3000/api/auth/borrarCuenta/ HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjMwYmNkZjhhOTMwMjgyZjcxY2YyZDYiLCJyb2xlIjpbInVzZXIiXSwiaWF0IjoxNzE0NDcwMTExLCJleHAiOjE3MTQ0OTg5MTF9.ZmxloXSGEK0jhNNyklBrm8aDNejYFsWHIcu3-FEzfbc

###
POST http://localhost:3000/api/auth/register HTTP/1.1
Content-Type: application/json

{
    "nombre": "JAMON",
    "email": "JAMON@mail.com",
    "password": "JAMON",
    "edad": 25,
    "ciudad": "Benavente",
    "roles": ["user"],
    "recibirOfertas" : false
}

###
POST http://localhost:3000/api/webs/addReview/662ac86381da418c0773b6e0 HTTP/1.1
Authorization: Bearer {{tokenAdmin}}
Content-Type: application/json

{
    "texto": "Me encanta",
    "puntuacion": 4
}

###
PATCH  http://localhost:3000/api/webs/662ac86381da418c0773b6e0 HTTP/1.1
Authorization: Bearer {{tokenAdmin}}
Content-Type: application/json

{
    "reseñas": [
    ],
    "scoring": 0,
    "numPuntuaciones": 0
}


###
# 6.- Los comercios pueden consultar los intereses de los usuarios de su ciudad para
# enviarles un correo. Es decir, dada una consulta, reciba los mails de todos los usuarios de
# su ciudad interesados en un tema concreto y que tengan permitirRecibirOfertas a true


POST http://localhost:3000/api/auth/register HTTP/1.1
Content-Type: application/json

{
    "nombre": "VALENCIANO4",
    "email": "VALENCIANO4@mail.com",
    "password": "VALENCIANO4",
    "edad": 25,
    "ciudad": "VALENCIANO",
    "recibirOfertas" : true
}
###
POST http://localhost:3000/api/auth/login HTTP/1.1
Content-Type: application/json

{
    "email": "Valencia@mail.com",
    "password": "Valencia"
}  
###
PATCH http://localhost:3000/api/auth/
Authorization: Bearer {{tokenUser}}
Content-Type: application/json

{
    "intereses": ["mE GUASTA IR A RESTAURANTES"]
}

###
GET http://localhost:3000/api/webs/ofertas HTTP/1.1
Authorization: Bearer {{tokenComercio}}


